# yaml
components_manager:
    coro_pool:
        initial_size: 500             # Preallocate 500 coroutines at startup.
        max_size: 1000                # Do not keep more than 1000 preallocated coroutines.

    task_processors:                  # Task processor is an executor for coroutine tasks

        main-task-processor:          # Make a task processor for CPU-bound couroutine tasks.
            worker_threads: 4         # Process tasks in 4 threads.
            thread_name: main-worker  # OS will show the threads of this task processor with 'main-worker' prefix.

        fs-task-processor:            # Make a separate task processor for filesystem bound tasks.
            thread_name: fs-worker
            worker_threads: 32

        monitor-task-processor:       # for monitoring
            thread_name: mon-worker
            worker_threads: 2

    default_task_processor: main-task-processor

    components:                                        # Configuring components that were registered via component_list
        server:
            listener:                                  # configuring the main listening socket...
                port: 9051                             # ...to listen on this port and...
                task_processor: main-task-processor    # ...process incoming requests on this task processor.
            listener-monitor:
                port: 9052                             # Listen on localhost:9052 for developer/utility requests
                connection:
                    in_buffer_size: 32768
                    requests_queue_size_threshold: 100
                task_processor: monitor-task-processor
        logging:
            fs-task-processor: fs-task-processor
            loggers:
                default:
                    file_path: '/var/log/falprs/log.txt'
                    format: tskv
                    level: error
                    overflow_behavior: discard  # Drop logs if the system is too busy to write them down.
                lprs:
                    file_path: '/var/log/falprs/lprs-log.txt'
                    format: tskv
                    level: info
                    overflow_behavior: discard  # Drop logs if the system is too busy to write them down.
                frs:
                    file_path: '/var/log/falprs/frs-log.txt'
                    format: tskv
                    level: info
                    overflow_behavior: discard  # Drop logs if the system is too busy to write them down.

        tracer:                                 # Component that helps to trace execution times and requests in logs.
            service-name: api-http

        dynamic-config:                      # Dynamic config storage options
            defaults:
                POSTGRES_DEFAULT_COMMAND_CONTROL:
                    network_timeout_ms: 5000
                    statement_timeout_ms: 5000

        dns-client:
            fs-task-processor: fs-task-processor

        testsuite-support:

        http-client:
            fs-task-processor: fs-task-processor

        handler-ping:
            path: /ping
            method: GET
            task_processor: main-task-processor
            throttling_enabled: false
            url_trailing_slash: strict-match

        fs-cache-main:
            dir: /opt/falprs/static/              # Path to the directory with files
            update-period: 10s                    # update cache each N seconds
            fs-task-processor: fs-task-processor  # Run it on blocking task processor

        handler-static:                           # Static handler.
            fs-cache-component: fs-cache-main
            path: /*                              # Registering handlers '/*' find files.
            method: GET                           # Handle only GET requests.
            task_processor: main-task-processor   # Run it on CPU bound task processor

        handler-log-level:
            path: /service/log-level/{level}
            method: GET,PUT
            task_processor: monitor-task-processor

        handler-on-log-rotate:
            path: /service/on-log-rotate/
            method: POST
            task_processor: monitor-task-processor

# LPRS
        lprs-api-http:
            path: /lprs/api/{method}
            method: POST
            task_processor: main-task-processor                              # Run it on CPU bound task processor
            max_request_size: 5242880                                        # 5 Mb

        lprs-postgresql-database:
            dbconnection: 'postgresql://falprs:123@localhost:5432/lprs'
            blocking_task_processor: fs-task-processor
            max_pool_size: 15
            max_queue_size: 200
            min_pool_size: 8

        lprs-groups-pg-cache:
            pgcomponent: lprs-postgresql-database
            update-interval: 1m
            update-types: only-full

        lprs-vstreams-config-pg-cache:
            pgcomponent: lprs-postgresql-database
            update-interval: 1m
            update-types: only-full

        lprs-vstream-group-pg-cache:
            pgcomponent: lprs-postgresql-database
            update-interval: 1m
            update-types: only-full

        lprs-workflow:
            task_processor: main-task-processor                              # Run it on CPU bound task processor
            fs-task-processor: fs-task-processor
            config:
                allow-group-id-without-auth: 1                               # Allow use of a group with a specified identifier without authorization
                ban-maintenance-interval: 5s                                 # Interval for ban maintenance (0 - disabled)
                events-log-maintenance-interval: 2h                          # Interval for events log maintenance (default - 2 hours; 0 - disabled)
                events-log-ttl: 4h                                           # Time to live for events log (default - 4 hours)
                screenshots-path: '/opt/falprs/static/lprs/'                 # Local path for saving event screenshots
                screenshots-url-prefix: 'http://localhost:9051/lprs/'        # Web URL prefix for event screenshots. Replace localhost with IP address if you need access to screenshots from outside
                failed-path: '/opt/falprs/static/lprs/failed/'               # Local path for saving unrecognized license plates screenshots
                failed-ttl: 60d                                              # Time to live for the unrecognized license plates screenshots (default - 60 days)

# FRS
        frs-api-http:
            path: /frs/api/{method}
            method: POST
            task_processor: main-task-processor                              # Run it on CPU bound task processor
            max_request_size: 5242880                                        # 5 Mb

        frs-postgresql-database:
            dbconnection: 'postgresql://falprs:123@localhost:5432/frs'
            blocking_task_processor: fs-task-processor
            max_pool_size: 15
            max_queue_size: 200
            min_pool_size: 8

        frs-groups-pg-cache:
            pgcomponent: frs-postgresql-database
            update-interval: 1m
            update-types: only-full

        frs-config-pg-cache:
            pgcomponent: frs-postgresql-database
            update-interval: 1m
            update-types: only-full

        frs-vstreams-config-pg-cache:
            pgcomponent: frs-postgresql-database
            update-interval: 10s
            full-update-interval: 5m
            update-correction: 1s
            update-types: full-and-incremental

        frs-face-descriptor-pg-cache:
            pgcomponent: frs-postgresql-database
            update-interval: 10s
            full-update-interval: 10m
            update-correction: 1s
            update-types: full-and-incremental

        frs-vstream-descriptors-pg-cache:
            pgcomponent: frs-postgresql-database
            update-interval: 10s
            full-update-interval: 10m
            update-correction: 1s
            update-types: full-and-incremental

        frs-sg-config-pg-cache:
            pgcomponent: frs-postgresql-database
            update-interval: 1m
            update-types: only-full

        frs-sg-descriptors-pg-cache:
            pgcomponent: frs-postgresql-database
            update-interval: 10s
            full-update-interval: 10m
            update-correction: 1s
            update-types: full-and-incremental

        frs-workflow:
            task_processor: main-task-processor                                          # Run it on CPU bound task processor
            fs-task-processor: fs-task-processor
            config:
                allow-group-id-without-auth: 1                                           # Allow use of a group with a specified identifier without authorization
                screenshots-path: '/opt/falprs/static/frs/screenshots/'                  # Local path for saving screenshots of faces
                screenshots-url-prefix: 'http://localhost:9051/frs/screenshots/'         # Web URL prefix for screenshots of faces. Replace localhost with IP address if you need access to screenshots from outside
                events-path: '/opt/falprs/static/frs/events/'                            # Local path for saving events' screenshots
                clear-old-log-faces: 1h                                                  # Period for launching cleaning of outdated logs from the log_faces table
                log-faces-ttl: 4h                                                        # TTL of logs from the log_faces table
                flag-deleted-maintenance-interval: 10s                                   # Maintenance period for records marked for deletion
                flag-deleted-ttl: 5m                                                     # TTL of records marked for deletion
                copy-events-maintenance-interval: 30s                                    # Event data copy maintenance period
                clear-old-events: 1d                                                     # Period for launching cleaning of outdated events
                events-ttl: 30d                                                          # TTL of the copied events
